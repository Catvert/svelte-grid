<svelte:head>
  <title>Example — Dynamic</title>
  <meta name="description" content="Svelte-grid — Example — Basic" />
  <meta name="keywords" content="draggable,resizable,grid,layout,responsive,breakpoints,Svelte,svelte,svelte.js,sveltejs,usage,example,examples,samples,dynamic,basic,showcase" />
  <meta name="author" content="Vahe Araqelyan" />
</svelte:head>

## Dynamic
<small><a target=_blank href="https://svelte.dev/repl/43dc62ebf9614927981503927f66c488?version=latest">REPL</a></small>
<small><a target=_blank  href={`${openSource}/dynamic.svx`}>SOURCE</a></small>

Updates the grid as you move or resize. You can do this by setting the `dynamic` property to `true`. Without this, the grid will be updated when the pointer is no longer active.

<Grid bind:items={items} rowHeight={100} let:item {cols} dynamic>
  <div class="content" style="background: {item?.data};" />
</Grid>

<script>
import Grid from "../../components/svelte-grid/index.svelte";
import gridHelp from "../../components/svelte-grid/utils/helper.js";
import { openSource } from "./github.js";

const id = () => "_" + Math.random().toString(36).substr(2, 9);

const COL = 10;

let items = [
  {
    [COL]: gridHelp.item({
      x: 0,
      y: 0,
      w: 2,
      h: 2,
    }),
    id: id(),
  },
  {
    [COL]: gridHelp.item({
      x: 2,
      y: 0,
      w: 2,
      h: 2,
    }),
    id: id(),
  },
  {
    [COL]: gridHelp.item({
      x: 4,
      y: 0,
      w: 2,
      h: 2,
    }),
    id: id(),
  },
  {
    [COL]: gridHelp.item({
      x: 6,
      y: 0,
      w: 2,
      h: 2,
    }),
    id: id(),
  },
];

const cols = [[1200, 10]];
</script>
